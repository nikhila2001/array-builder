{"ast":null,"code":"var _jsxFileName = \"/home/sony/Desktop/array-builder/src/components/RandomArray.jsx\",\n  _s = $RefreshSig$();\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport Accordion from \"@mui/material/Accordion\";\nimport AccordionSummary from \"@mui/material/AccordionSummary\";\nimport AccordionDetails from \"@mui/material/AccordionDetails\";\nimport TextField from \"@mui/material/TextField\";\nimport { useState } from \"react\";\nimport ListOfActivities from \"./ListOfActivities\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction RandomArray() {\n  _s();\n  const [randomArray, setRandomArray] = useState([]);\n  const [arrayLength, setArrayLength] = useState();\n  const dataTypes = [Number, String, Boolean, Object, Array, null, undefined];\n  const getRandomElement = dataType => {\n    switch (dataType) {\n      case Number:\n        return Math.floor(Math.random() * 100);\n      // Generate a random number between 0 and 100\n      case String:\n        return Math.random().toString(36).substring(7);\n      // Generate a random string\n      case Boolean:\n        return Math.random() < 0.5;\n      // Generate a random boolean\n      case Object:\n        return {\n          key: Math.random().toString(36).substring(7)\n        };\n      // Generate a random object\n      case Array:\n        return [1, 2, 3];\n      // Generate a sample array\n      case null:\n        return null;\n      case undefined:\n        return undefined;\n      default:\n        return null;\n    }\n  };\n  const generateRandomMixedArray = () => {\n    let newArray = [];\n    for (let i = 0; i < arrayLength; i++) {\n      const randomDataTypeIndex = Math.floor(Math.random() * dataTypes.length);\n      const randomDataType = dataTypes[randomDataTypeIndex];\n      const randomElement = getRandomElement(randomDataType);\n      newArray.push(randomElement);\n    }\n    setRandomArray(newArray);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        bgcolor: \"white\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Accordion, {\n        children: [/*#__PURE__*/_jsxDEV(AccordionSummary, {\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Array Length\",\n            type: \"number\",\n            value: arrayLength,\n            onChange: e => {\n              const newValue = parseInt(e.target.value);\n              if (!isNaN(newValue)) {\n                setArrayLength();\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: generateRandomMixedArray,\n            children: \"Generate Random Array?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AccordionDetails, {\n          children: randomArray.length > 0 ? /*#__PURE__*/_jsxDEV(Typography, {\n            sx: {\n              display: \"flex\",\n              justifyContent: \"space-evenly\"\n            },\n            children: randomArray.map((element, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: JSON.stringify(element)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n            children: \"No array generated yet.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListOfActivities, {\n      array: randomArray,\n      updateArray: setRandomArray\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(RandomArray, \"pdakoDZC1Y6yE3RFv2s4P96BQhs=\");\n_c = RandomArray;\nexport default RandomArray;\nvar _c;\n$RefreshReg$(_c, \"RandomArray\");","map":{"version":3,"names":["Box","Typography","Button","Accordion","AccordionSummary","AccordionDetails","TextField","useState","ListOfActivities","jsxDEV","_jsxDEV","Fragment","_Fragment","RandomArray","_s","randomArray","setRandomArray","arrayLength","setArrayLength","dataTypes","Number","String","Boolean","Object","Array","undefined","getRandomElement","dataType","Math","floor","random","toString","substring","key","generateRandomMixedArray","newArray","i","randomDataTypeIndex","length","randomDataType","randomElement","push","children","sx","bgcolor","label","type","value","onChange","e","newValue","parseInt","target","isNaN","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","display","justifyContent","map","element","index","JSON","stringify","array","updateArray","_c","$RefreshReg$"],"sources":["/home/sony/Desktop/array-builder/src/components/RandomArray.jsx"],"sourcesContent":["import Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport Accordion from \"@mui/material/Accordion\";\nimport AccordionSummary from \"@mui/material/AccordionSummary\";\nimport AccordionDetails from \"@mui/material/AccordionDetails\";\nimport TextField from \"@mui/material/TextField\";\nimport { useState } from \"react\";\nimport ListOfActivities from \"./ListOfActivities\";\n\nfunction RandomArray() {\n  const [randomArray, setRandomArray] = useState([]);\n  const [arrayLength, setArrayLength] = useState();\n\n  const dataTypes = [Number, String, Boolean, Object, Array, null, undefined];\n  const getRandomElement = (dataType) => {\n    switch (dataType) {\n      case Number:\n        return Math.floor(Math.random() * 100); // Generate a random number between 0 and 100\n      case String:\n        return Math.random().toString(36).substring(7); // Generate a random string\n      case Boolean:\n        return Math.random() < 0.5; // Generate a random boolean\n      case Object:\n        return { key: Math.random().toString(36).substring(7) }; // Generate a random object\n      case Array:\n        return [1, 2, 3]; // Generate a sample array\n      case null:\n        return null;\n      case undefined:\n        return undefined;\n      default:\n        return null;\n    }\n  };\n\n  const generateRandomMixedArray = () => {\n    let newArray = [];\n    for (let i = 0; i < arrayLength; i++) {\n      const randomDataTypeIndex = Math.floor(Math.random() * dataTypes.length);\n      const randomDataType = dataTypes[randomDataTypeIndex];\n      const randomElement = getRandomElement(randomDataType);\n      newArray.push(randomElement);\n    }\n    setRandomArray(newArray);\n  };\n\n  return (\n    <>\n      <Box sx={{ bgcolor: \"white\" }}>\n        <Accordion>\n          <AccordionSummary>\n            <TextField\n              label=\"Array Length\"\n              type=\"number\"\n              value={arrayLength}\n              onChange={(e) =>{const newValue = parseInt(e.target.value);\n              if (!isNaN(newValue)) {\n                setArrayLength()\n              }\n              } }\n            />\n            <Button variant=\"contained\" onClick={generateRandomMixedArray}>\n              Generate Random Array?\n            </Button>\n          </AccordionSummary>\n          <AccordionDetails>\n            {randomArray.length > 0 ? (\n              <Typography\n                sx={{ display: \"flex\", justifyContent: \"space-evenly\" }}\n              >\n                {randomArray.map((element, index) => (\n                  <div key={index}>{JSON.stringify(element)}</div>\n                ))}\n              </Typography>\n            ) : (\n              <Typography>No array generated yet.</Typography>\n            )}\n          </AccordionDetails>\n        </Accordion>\n      </Box>\n      <ListOfActivities array={randomArray} updateArray ={setRandomArray}/>\n    </>\n  );\n}\nexport default RandomArray;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}