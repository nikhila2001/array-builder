{"ast":null,"code":"var _jsxFileName = \"/home/sony/Desktop/array-builder/src/components/GenerateRandomArray.js\";\nimport { Typography } from \"@mui/material\";\nimport Stack from \"@mui/system/Stack\";\nimport Button from \"@mui/material/Button\";\nimport { TextareaAutosize } from '@mui/base/TextareaAutosize';\nimport Divider from '@mui/material/Divider';\nimport Box from \"@mui/material/Box\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction GenerateRandomArray() {\n  // const ArrayOfMixedDataType = [\n  //     42, \"apple\", true, { name: \"John\", age: 30 }, [\"banana\", \"orange\", \"grape\"], null, 5.67, \"car\",\n  //     false, { title: \"Book\", pages: 200 }, [\"dog\", \"cat\"], 12.5, undefined, \"house\"\n  //   ]; \n\n  // let random = Math.floor(Math.random() * 30)\n  // console.log(random);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Stack, {\n      mt: 2,\n      direction: {\n        xs: 'column',\n        sm: \"row\"\n      },\n      spacing: {\n        xs: 1,\n        sm: 2\n      },\n      justifyContent: \"space-evenly\",\n      divider: /*#__PURE__*/_jsxDEV(Divider, {\n        orientation: \"vertical\",\n        flexItem: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 122\n      }, this),\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          mt: 0,\n          children: [\"Want to Generate Random Array ?\", /*#__PURE__*/_jsxDEV(Button, {\n            style: {\n              marginLeft: \"1rem\",\n              marginTop: \"0\"\n            },\n            variant: \"contained\",\n            size: \"small\",\n            sx: {\n              marginTop: \"1rem\",\n              marginRight: \"1rem\"\n            },\n            children: \"Generate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          maxHeight: '200px',\n          px: 3,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            mt: 1,\n            maxWidth: \"100%\",\n            bgcolor: 'yellow',\n            children: \"[\\\"sony\\\",\\\"nikhila\\\",\\\"naveen\\\",\\\"nani\\\",\\\"yashoda\\\",\\\"chandramouli\\\",\\\"chandu\\\"]\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(TextareaAutosize, {\n        \"aria-label\": \"maximum height\" // ARIA label for accessibility\n        ,\n        placeholder: \"Enter your Array Items\",\n        minRows: 4,\n        style: {\n          minWidth: '50%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_c = GenerateRandomArray;\nexport default GenerateRandomArray;\nvar _c;\n$RefreshReg$(_c, \"GenerateRandomArray\");","map":{"version":3,"names":["Typography","Stack","Button","TextareaAutosize","Divider","Box","jsxDEV","_jsxDEV","Fragment","_Fragment","GenerateRandomArray","children","mt","direction","xs","sm","spacing","justifyContent","divider","orientation","flexItem","fileName","_jsxFileName","lineNumber","columnNumber","style","marginLeft","marginTop","variant","size","sx","marginRight","maxHeight","px","maxWidth","bgcolor","placeholder","minRows","minWidth","_c","$RefreshReg$"],"sources":["/home/sony/Desktop/array-builder/src/components/GenerateRandomArray.js"],"sourcesContent":["import { Typography } from \"@mui/material\";\nimport Stack from \"@mui/system/Stack\";\nimport Button from \"@mui/material/Button\";\nimport { TextareaAutosize } from '@mui/base/TextareaAutosize';\nimport Divider from '@mui/material/Divider';\nimport Box from \"@mui/material/Box\";\n\n\nfunction GenerateRandomArray() {\n\n    // const ArrayOfMixedDataType = [\n    //     42, \"apple\", true, { name: \"John\", age: 30 }, [\"banana\", \"orange\", \"grape\"], null, 5.67, \"car\",\n    //     false, { title: \"Book\", pages: 200 }, [\"dog\", \"cat\"], 12.5, undefined, \"house\"\n    //   ]; \n\n    \n    // let random = Math.floor(Math.random() * 30)\n    // console.log(random);\n\n    return (\n        <>\n        <Stack mt={2} direction={{xs:'column',sm:\"row\"}} spacing={{xs:1,sm:2}} justifyContent={\"space-evenly\"}  divider={<Divider orientation=\"vertical\" flexItem/>}>\n           <Box>\n           <Typography mt={0}>\n            Want to Generate Random Array ?\n            <Button style={{marginLeft:\"1rem\",marginTop:\"0\"}} variant=\"contained\" size=\"small\" sx={{marginTop:\"1rem\",marginRight:\"1rem\"}}>Generate</Button>\n\n           </Typography>\n\n           <Box maxHeight={'200px'} px={3}>\n            <Typography variant=\"body1\" mt={1} maxWidth={\"100%\"} bgcolor={'yellow'}>\n             [\"sony\",\"nikhila\",\"naveen\",\"nani\",\"yashoda\",\"chandramouli\",\"chandu\"]\n            </Typography>\n           </Box>\n\n           </Box>\n           \n           \n           <TextareaAutosize\n             aria-label=\"maximum height\" // ARIA label for accessibility\n             placeholder=\"Enter your Array Items\"\n             minRows={4}\n             style={{minWidth:'50%'}}\n           />\n\n\n           \n        </Stack>\n\n        </>\n    )\n}\n\nexport default GenerateRandomArray;"],"mappings":";AAAA,SAASA,UAAU,QAAQ,eAAe;AAC1C,OAAOC,KAAK,MAAM,mBAAmB;AACrC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,SAASC,gBAAgB,QAAQ,4BAA4B;AAC7D,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,GAAG,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGpC,SAASC,mBAAmBA,CAAA,EAAG;EAE3B;EACA;EACA;EACA;;EAGA;EACA;;EAEA,oBACIH,OAAA,CAAAE,SAAA;IAAAE,QAAA,eACAJ,OAAA,CAACN,KAAK;MAACW,EAAE,EAAE,CAAE;MAACC,SAAS,EAAE;QAACC,EAAE,EAAC,QAAQ;QAACC,EAAE,EAAC;MAAK,CAAE;MAACC,OAAO,EAAE;QAACF,EAAE,EAAC,CAAC;QAACC,EAAE,EAAC;MAAC,CAAE;MAACE,cAAc,EAAE,cAAe;MAAEC,OAAO,eAAEX,OAAA,CAACH,OAAO;QAACe,WAAW,EAAC,UAAU;QAACC,QAAQ;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAE;MAAAb,QAAA,gBACzJJ,OAAA,CAACF,GAAG;QAAAM,QAAA,gBACJJ,OAAA,CAACP,UAAU;UAACY,EAAE,EAAE,CAAE;UAAAD,QAAA,GAAC,iCAElB,eAAAJ,OAAA,CAACL,MAAM;YAACuB,KAAK,EAAE;cAACC,UAAU,EAAC,MAAM;cAACC,SAAS,EAAC;YAAG,CAAE;YAACC,OAAO,EAAC,WAAW;YAACC,IAAI,EAAC,OAAO;YAACC,EAAE,EAAE;cAACH,SAAS,EAAC,MAAM;cAACI,WAAW,EAAC;YAAM,CAAE;YAAApB,QAAA,EAAC;UAAQ;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEpI,CAAC,eAEbjB,OAAA,CAACF,GAAG;UAAC2B,SAAS,EAAE,OAAQ;UAACC,EAAE,EAAE,CAAE;UAAAtB,QAAA,eAC9BJ,OAAA,CAACP,UAAU;YAAC4B,OAAO,EAAC,OAAO;YAAChB,EAAE,EAAE,CAAE;YAACsB,QAAQ,EAAE,MAAO;YAACC,OAAO,EAAE,QAAS;YAAAxB,QAAA,EAAC;UAExE;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAED,CAAC,eAGNjB,OAAA,CAACJ,gBAAgB;QACf,cAAW,gBAAgB,CAAC;QAAA;QAC5BiC,WAAW,EAAC,wBAAwB;QACpCC,OAAO,EAAE,CAAE;QACXZ,KAAK,EAAE;UAACa,QAAQ,EAAC;QAAK;MAAE;QAAAjB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIE;EAAC,gBAEN,CAAC;AAEX;AAACe,EAAA,GA3CQ7B,mBAAmB;AA6C5B,eAAeA,mBAAmB;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}